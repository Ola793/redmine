name: Playwright Tests
permissions:
  contents: write
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npm test
      env:
        LOGIN: ${{ secrets.LOGIN }}
        PASSWORD: ${{ secrets.PASSWORD }}
        EMAIL: ${{ secrets.EMAIL }}
      continue-on-error: true

    # Allure Installation
    - name: Install Allure
      run: |
        ALLURE_VERSION=2.20.1
        curl -o allure-$ALLURE_VERSION.tgz -L https://github.com/allure-framework/allure2/releases/download/$ALLURE_VERSION/allure-$ALLURE_VERSION.tgz
        tar -zxvf allure-$ALLURE_VERSION.tgz
        sudo mv allure-$ALLURE_VERSION /opt/allure
        sudo chmod +x /opt/allure/bin/allure
        echo "/opt/allure/bin" >> $GITHUB_PATH
      shell: /usr/bin/bash -e {0}

    # Restore Allure History (if exists)
    - name: Download Allure History Artifact
      uses: actions/download-artifact@v3
      with:
        name: allure-history
        path: allure-results/history
      continue-on-error: true  # Allow it to continue if no artifact found

    # Ensure history folder exists, even if empty
    - name: Ensure Allure History Directory Exists
      run: |
        mkdir -p allure-results/history

    # Generate Allure Report with History
    - name: Generate Allure Report
      run: |
        echo "Generating Allure report..."
        if [ -d allure-results ]; then
          /opt/allure/bin/allure generate allure-results --clean -o allure-report
        else
          echo "Cannot generate report, allure-results not found."
        fi

    # Debug Allure History Folder
    - name: Debug Allure History Folder
      run: |
        echo "Listing contents of allure-results/history:"
        ls -la allure-results/history || echo "allure-results/history does not exist."

    # Save Allure report as artifact to avoid loss during branch switching
    - name: Save Allure Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report

    # Save Allure History for Trend Data
    - name: Save Allure History as Artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: allure-history
        path: allure-results/history
        if-no-files-found: warn  # Don't fail if no history files found
        include-hidden-files: false  # Exclude hidden files like .DS_Store or similar

    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages

    # Restore the Allure report from artifact
    - name: Download Allure Report Artifact
      uses: actions/download-artifact@v3
      with:
        name: allure-report
        path: ./allure-report

    # Copy the Allure report to the gh-pages branch
    - name: Copy Allure Report to gh-pages
      run: |
        if [ -d allure-report ]; then
          mkdir -p ./allure-report/
          cp -r allure-report/* ./allure-report/ || echo "No allure report generated to copy."
        else
          echo "No allure-report directory found to copy."
        fi

    # List contents of allure-report before git commit
    - name: Debug List Allure Report Before Commit
      run: |
        echo "Listing contents of allure-report before commit:"
        ls -la allure-report || echo "allure-report directory does not exist."

    # Commit and push the report to the gh-pages branch
    - name: Commit and Push Allure Report
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ -d allure-report ]; then
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add allure-report/
          git commit -m "Update Allure report" || echo "No changes to commit"
          git push origin gh-pages
        else
          echo "No allure-report directory to commit."
        fi

    - name: Confirm GitHub Pages Setup
      run: echo "GitHub Pages is set up on the 'gh-pages' branch."
