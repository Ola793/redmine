name: Playwright Tests
permissions:
  contents: write
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    # Download previous Allure history to preserve trends
    - name: Get Allure history
      uses: actions/checkout@v3
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Run Playwright tests
      run: npm test
      env:
        LOGIN: ${{ secrets.LOGIN }}
        PASSWORD: ${{ secrets.PASSWORD }}
        EMAIL: ${{ secrets.EMAIL }}
      continue-on-error: true

    # Allure Installation
    - name: Install Allure
      run: |
        ALLURE_VERSION=2.20.1
        curl -o allure-$ALLURE_VERSION.tgz -L https://github.com/allure-framework/allure2/releases/download/$ALLURE_VERSION/allure-$ALLURE_VERSION.tgz
        tar -zxvf allure-$ALLURE_VERSION.tgz
        sudo mv allure-$ALLURE_VERSION /opt/allure
        sudo chmod +x /opt/allure/bin/allure
        echo "/opt/allure/bin" >> $GITHUB_PATH
      shell: /usr/bin/bash -e {0}

    # Generate Allure Report
    - name: Generate Allure Report
      run: |
        echo "Generating Allure report..."
        if [ -d allure-results ]; then
          /opt/allure/bin/allure generate allure-results --clean -o allure-report
        else
          echo "Cannot generate report, allure-results not found."
        fi

    # Save Allure report as artifact
    - name: Save Allure Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report

    # Save Allure history to maintain trends
    - name: Copy Allure History
      run: |
        if [ -d allure-results/history ]; then
          mkdir -p allure-history
          cp -r allure-results/history allure-history
        fi

    - name: Upload Allure History Artifact
      uses: actions/upload-artifact@v3
      with:
        name: allure-history
        path: allure-history

    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages

    # Download Allure Report Artifact
    - name: Download Allure Report Artifact
      uses: actions/download-artifact@v3
      with:
        name: allure-report
        path: ./allure-report

    # Copy the Allure report to the gh-pages branch
    - name: Copy Allure Report to gh-pages
      run: |
        if [ -d allure-report ]; then
          mkdir -p ./allure-report/
          cp -r allure-report/* ./allure-report/ || echo "No allure report generated to copy."
        else
          echo "No allure-report directory found to copy."
        fi

    # List contents of allure-report before git commit
    - name: Debug List Allure Report Before Commit
      run: |
        echo "Listing contents of allure-report before commit:"
        ls -la allure-report || echo "allure-report directory does not exist."

    # Commit and push the report to the gh-pages branch
    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history

    - name: Confirm GitHub Pages Setup
      run: echo "GitHub Pages is set up on the 'gh-pages' branch."
